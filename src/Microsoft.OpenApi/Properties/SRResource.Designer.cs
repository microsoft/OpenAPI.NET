//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.OpenApi.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SRResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SRResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.OpenApi.Properties.SRResource", typeof(SRResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There must be an active scope for name &apos;{0}&apos; to be written..
        /// </summary>
        internal static string ActiveScopeNeededForPropertyNameWriting {
            get {
                return ResourceManager.GetString("ActiveScopeNeededForPropertyNameWriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; is null, empty or consists only of white-space..
        /// </summary>
        internal static string ArgumentNullOrWhiteSpace {
            get {
                return ResourceManager.GetString("ArgumentNullOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://localhost/.
        /// </summary>
        internal static string DefaultBaseUri {
            get {
                return ResourceManager.GetString("DefaultBaseUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filed name &apos;{0}&apos; of extension doesn&apos;t begin with x-..
        /// </summary>
        internal static string ExtensionFieldNameMustBeginWithXDash {
            get {
                return ResourceManager.GetString("ExtensionFieldNameMustBeginWithXDash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indentation level cannot be lower than 0..
        /// </summary>
        internal static string IndentationLevelInvalid {
            get {
                return ResourceManager.GetString("IndentationLevelInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input item should be in type of &apos;{0}&apos;..
        /// </summary>
        internal static string InputItemShouldBeType {
            get {
                return ResourceManager.GetString("InputItemShouldBeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Reference identifier &apos;{0}&apos;..
        /// </summary>
        internal static string InvalidReferenceId {
            get {
                return ResourceManager.GetString("InvalidReferenceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Reference Type..
        /// </summary>
        internal static string InvalidReferenceType {
            get {
                return ResourceManager.GetString("InvalidReferenceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local reference must have type specified..
        /// </summary>
        internal static string LocalReferenceRequiresType {
            get {
                return ResourceManager.GetString("LocalReferenceRequiresType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The active scope must be an object scope for property name &apos;{0}&apos; to be written..
        /// </summary>
        internal static string ObjectScopeNeededForPropertyNameWriting {
            get {
                return ResourceManager.GetString("ObjectScopeNeededForPropertyNameWriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while processing the Open API document..
        /// </summary>
        internal static string OpenApiExceptionGenericError {
            get {
                return ResourceManager.GetString("OpenApiExceptionGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given OpenAPI format &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string OpenApiFormatNotSupported {
            get {
                return ResourceManager.GetString("OpenApiFormatNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object element name &apos;{0}&apos; is required..
        /// </summary>
        internal static string OpenApiObjectElementIsRequired {
            get {
                return ResourceManager.GetString("OpenApiObjectElementIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The OpenApi element &apos;{0}&apos; is already marked as reference object..
        /// </summary>
        internal static string OpenApiObjectMarkAsReference {
            get {
                return ResourceManager.GetString("OpenApiObjectMarkAsReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the parameter location is &quot;path&quot;, this property is REQUIRED and its value MUST be true.
        /// </summary>
        internal static string OpenApiParameterRequiredPropertyMandatory {
            get {
                return ResourceManager.GetString("OpenApiParameterRequiredPropertyMandatory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given OpenAPI specification version &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string OpenApiSpecVersionNotSupported {
            get {
                return ResourceManager.GetString("OpenApiSpecVersionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is not supported in Open API document..
        /// </summary>
        internal static string OpenApiUnsupportedValueType {
            get {
                return ResourceManager.GetString("OpenApiUnsupportedValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while writing the Open API document..
        /// </summary>
        internal static string OpenApiWriterExceptionGenericError {
            get {
                return ResourceManager.GetString("OpenApiWriterExceptionGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given primitive type &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string PrimitiveTypeNotSupported {
            get {
                return ResourceManager.GetString("PrimitiveTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The reference string &apos;{0}&apos; has invalid format..
        /// </summary>
        internal static string ReferenceHasInvalidFormat {
            get {
                return ResourceManager.GetString("ReferenceHasInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote reference not supported..
        /// </summary>
        internal static string RemoteReferenceNotSupported {
            get {
                return ResourceManager.GetString("RemoteReferenceNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The runtime expression &apos;{0}&apos; has invalid format..
        /// </summary>
        internal static string RuntimeExpressionHasInvalidFormat {
            get {
                return ResourceManager.GetString("RuntimeExpressionHasInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The runtime expression &apos;{0}&apos; should start with &apos;$&apos;.
        /// </summary>
        internal static string RuntimeExpressionMustBeginWithDollar {
            get {
                return ResourceManager.GetString("RuntimeExpressionMustBeginWithDollar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scope must be present to end..
        /// </summary>
        internal static string ScopeMustBePresentToEnd {
            get {
                return ResourceManager.GetString("ScopeMustBePresentToEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scope to end is expected to be of type &apos;{0}&apos; but it is of type &apos;{0}&apos;..
        /// </summary>
        internal static string ScopeToEndHasIncorrectType {
            get {
                return ResourceManager.GetString("ScopeToEndHasIncorrectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source expression &apos;{0}&apos; has invalid format..
        /// </summary>
        internal static string SourceExpressionHasInvalidFormat {
            get {
                return ResourceManager.GetString("SourceExpressionHasInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not find visitor type registered for type &apos;{0}&apos;..
        /// </summary>
        internal static string UnknownVisitorType {
            get {
                return ResourceManager.GetString("UnknownVisitorType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key &apos;{0}&apos; in &apos;{1}&apos; of components MUST match the regular expression &apos;{2}&apos;..
        /// </summary>
        internal static string Validation_ComponentsKeyMustMatchRegularExpr {
            get {
                return ResourceManager.GetString("Validation_ComponentsKeyMustMatchRegularExpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extension name &apos;{0}&apos; in &apos;{1}&apos; object MUST begin with &apos;x-&apos;..
        /// </summary>
        internal static string Validation_ExtensionNameMustBeginWithXDash {
            get {
                return ResourceManager.GetString("Validation_ExtensionNameMustBeginWithXDash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &apos;{0}&apos; in &apos;{1}&apos; object is REQUIRED..
        /// </summary>
        internal static string Validation_FieldIsRequired {
            get {
                return ResourceManager.GetString("Validation_FieldIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path item name &apos;{0}&apos; MUST begin with a slash..
        /// </summary>
        internal static string Validation_PathItemMustBeginWithSlash {
            get {
                return ResourceManager.GetString("Validation_PathItemMustBeginWithSlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path signature &apos;{0}&apos; MUST begin be unique..
        /// </summary>
        internal static string Validation_PathSignatureMustBeUnique {
            get {
                return ResourceManager.GetString("Validation_PathSignatureMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The same rule cannot be in the same rule set twice..
        /// </summary>
        internal static string Validation_RuleAddTwice {
            get {
                return ResourceManager.GetString("Validation_RuleAddTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema {0} must contain property specified in the discriminator {1} in the required field list..
        /// </summary>
        internal static string Validation_SchemaRequiredFieldListMustContainThePropertySpecifiedInTheDiscriminator {
            get {
                return ResourceManager.GetString("Validation_SchemaRequiredFieldListMustContainThePropertySpecifiedInTheDiscriminat" +
                        "or", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string &apos;{0}&apos; MUST be in the format of an email address..
        /// </summary>
        internal static string Validation_StringMustBeEmailAddress {
            get {
                return ResourceManager.GetString("Validation_StringMustBeEmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenAPI document must be added to an OpenApiWorkspace to be able to resolve external references..
        /// </summary>
        internal static string WorkspaceRequredForExternalReferenceResolution {
            get {
                return ResourceManager.GetString("WorkspaceRequredForExternalReferenceResolution", resourceCulture);
            }
        }
    }
}
