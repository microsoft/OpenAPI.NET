# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src/**
      - .azure-pipelines/**
  tags:
    include:
      - v*

pr:
  branches:
    include:
      - main
      - task/migrate-acr-pipeline

variables:
  REGISTRY: 'msgraphpperegistry.azurecr.io'
  IMAGE_NAME: 'public/openapi/hidi'
  PREVIEW_BRANCH: 'refs/heads/task/migrate-acr-pipeline'

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self
  
  - task: AzureCLI@2
    displayName: 'Login to Azure Container Registry'
    inputs:
      azureSubscription: 'ACR Push Test'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az acr login --name msgraphpperegistry
  
  - powershell: |
      $content = [XML](Get-Content ./src/Microsoft.OpenApi.Hidi/Microsoft.OpenApi.Hidi.csproj)
      $version = $content.Project.PropertyGroup.Version
      Write-Host "Version found: $version" 
      Write-Host "##vso[task.setvariable variable=version;isoutput=true]$version"
    displayName: 'Get version from csproj'
    name: getversion
  
  - bash: |
      # Debug output to verify version variable
      echo "Version from previous step: $(getversion.version)"
    displayName: 'Verify version variable'
  
  - bash: |
      runnumber=$(echo $(Build.BuildNumber) | awk '{ print substr($0, length($0)-3, length($0)) }')
      echo "##vso[task.setvariable variable=runnumber]$runnumber"
    displayName: 'Get truncated run number'
    condition: eq(variables['Build.SourceBranch'], variables['PREVIEW_BRANCH'])
  
  - bash: |
      date=$(date +'%Y%m%d')
      echo "##vso[task.setvariable variable=date]$date"
    displayName: 'Get current date'
    condition: eq(variables['Build.SourceBranch'], variables['PREVIEW_BRANCH'])
  
  - bash: |
      echo "Building Docker image..."
      docker build \
        --build-arg version_suffix=preview.$(date)$(runnumber) \
        -t $(REGISTRY)/$(IMAGE_NAME):nightly \
        -t $(REGISTRY)/$(IMAGE_NAME):$(version)-preview.$(date)$(runnumber) \
        "$(Build.SourcesDirectory)"
      
      echo "Pushing Docker image with nightly tag..."
      docker push $(REGISTRY)/$(IMAGE_NAME):nightly
      docker push $(REGISTRY)/$(IMAGE_NAME):$(version)-preview.$(date)$(runnumber)
    displayName: 'Build and Push Nightly Image'
    condition: eq(variables['Build.SourceBranch'], variables['PREVIEW_BRANCH'])
  
  - bash: |
      echo "Building Docker image for release..."
      docker build \
        -t $(REGISTRY)/$(IMAGE_NAME):latest \
        -t $(REGISTRY)/$(IMAGE_NAME):$(version) \
        "$(Build.SourcesDirectory)"
      
      echo "Pushing Docker image with latest and version tags..."
      docker push $(REGISTRY)/$(IMAGE_NAME):latest
      docker push $(REGISTRY)/$(IMAGE_NAME):$(version)
    displayName: 'Build and Push Release Image'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')

