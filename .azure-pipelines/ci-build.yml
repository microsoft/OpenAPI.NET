# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  branches:
    include:
      - main
      - dev
      - support/v1
      - task/migrate-acr-pipeline
  paths:
    include:
      - src/Microsoft.OpenApi.Hidi/**
      - .azure-pipelines/**

variables:
  REGISTRY: 'msgraphpperegistry.azurecr.io'
  IMAGE_NAME: 'public/openapi/hidi'
  DEV_BRANCH: 'refs/heads/dev'
  MAIN_BRANCH: 'refs/heads/task/migrate-acr-pipeline'
  SUPPORT_BRANCH: 'refs/heads/support/v1'

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self
  
  - task: AzureCLI@2
    displayName: 'Login to Azure Container Registry'
    inputs:
      azureSubscription: 'ACR Push Test'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az acr login --name $(REGISTRY)
  
  - powershell: |
      $content = [XML](Get-Content ./src/Microsoft.OpenApi.Hidi/Microsoft.OpenApi.Hidi.csproj)
      $version = $content.Project.PropertyGroup.Version
      Write-Host "Version found: $version" 
      Write-Host "##vso[task.setvariable variable=version]$version"
    displayName: 'Get version from csproj'
  
  - bash: |
      echo "Building Docker image..."
      docker build -t $(REGISTRY)/$(IMAGE_NAME):nightly "$(Build.SourcesDirectory)"
      
      echo "Pushing Docker image with nightly tag..."
      docker push $(REGISTRY)/$(IMAGE_NAME):nightly
    displayName: 'Build and Push Nightly Image'
    condition: eq(variables['Build.SourceBranch'], variables['DEV_BRANCH'])
  
  - bash: |
      echo "Building Docker image..."
      docker build -t $(REGISTRY)/$(IMAGE_NAME):latest -t $(REGISTRY)/$(IMAGE_NAME):$(version) "$(Build.SourcesDirectory)"
      
      echo "Pushing Docker image with latest and version tags..."
      docker push $(REGISTRY)/$(IMAGE_NAME):latest
      docker push $(REGISTRY)/$(IMAGE_NAME):$(version)
    displayName: 'Build and Push Release Image'
    condition: or(eq(variables['Build.SourceBranch'], variables['MAIN_BRANCH']), eq(variables['Build.SourceBranch'], variables['SUPPORT_BRANCH']))

